---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: wl-wf-
  labels:
    stage: build
spec:
  arguments:
    parameters:
      - name: kaniko-registry-mirror
        value : <REGISTRY_REGISTRY_URL>
      - name: dockerhub-registry-proxy
        value: <REGISTRY_DOCKERHUB_PROXY>
      - name: gcr-registry-proxy
        value : <REGISTRY_GCR_PROXY>
      - name: kaniko-cache-repo
        value : <REGISTRY_REGISTRY_URL>
      - name: kaniko-cache
        value : "true"

  volumeClaimTemplates:
    - metadata:
        name: build
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 8Gi
  entrypoint: ci-sequence
  templateDefaults:
    timeout: 30m
    retryStrategy:
      limit: "2"
  imagePullSecrets:
    - name: proxy-docker-config
  #  onExit: exit-handler
  volumes:
    - name: kaniko-secret
      secret:
        secretName: proxy-docker-config
        items:
          - key: .dockerconfigjson
            path: config.json
  templates:
    - name: ci-sequence
      dag:
        tasks:
          - name: git-clone
            templateRef:
              name: git-clone-cwft
              template: git-clone
              clusterScope: true
          - name: trivy-fs-scan
            dependencies: [git-clone]
            templateRef:
              name: trivy-fs-scan-cwft
              template: trivy-fs-scan
              clusterScope: true
          - name: kaniko
            dependencies: [git-clone]
            templateRef:
              name: kaniko-s3-cwft
              template: kaniko
              clusterScope: true
    - name: exit-handler
      container:
        image: '{{workflow.parameters.dockerhub-registry-proxy}}/library/alpine'
        imagePullPolicy: IfNotPresent
        command: [sh, -c]
        args: ['echo  {{workflow.name}} {{workflow.status}} {{workflow.duration}}']

