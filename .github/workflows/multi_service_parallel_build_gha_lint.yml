---
name: multi_service_parallel_build
# use workflow_dispatch to run the GHA manually
on:
 workflow_dispatch:
# use on: push: tags to run the GHA on tag change

# on:
#   push:
#     tags: ['[0-9]+.[0-9]+.[0-9]+-?*']
env:
  TAG: ${{ github.ref }}
  REPO_NAME: ${{ github.repository }}
  ARGO_NAMESPACE: wl-vt-cnask-dev
  SEMVER_REGEX: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
  USE_CACHE: true # true of false
  USE_MIRROR: true # true or anything
jobs:
  multi_build:
    runs-on:
      group: Default
      labels: self-hosted
    steps:
      - name: semver_chk
        run: |
          TAG=`basename $TAG`
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo $TAG | grep -P $SEMVER_REGEX || { echo "Not a SEMVER tag, exitig."; exit 1; }
      - name: hostname and uname
        run: |
          hostname
          uname -a
          if [[ $( hostname | grep azure ) ]]; then  echo "It's azure runner. Exiting."; exit 1; fi
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: 'true'
      - name: argo cli install
        run: |
          # Download the binary
           curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.5.4/argo-linux-amd64.gz
           gunzip argo-linux-amd64.gz
           chmod +x argo-linux-amd64
           sudo mv ./argo-linux-amd64 /usr/local/bin/argo
           argo version
      - name: build
        # git clone and parallel kaniko build
        run: |
          set -eu
          declare -a CHANGED_WLS_DIRS
          echo "TAG: $TAG"
          DIFF_TAGS=`git tag --sort=-creatordate | grep -P $SEMVER_REGEX | head -2`
          if [[ `echo $DIFF_TAGS | wc -w` -gt 1 ]]
          then
            LIST_DIR=`git diff-tree --no-commit-id --dirstat=files,0  -r $DIFF_TAGS | awk  '{print $2;};' | sed -r 's/^([^/]*\/[^/]*)\/.*$/\1/'| uniq`
            if [[ "$LIST_DIR" =~ libs ]] && [[ -d apps ]]; then LIST_DIR=`ls -1d apps/*`;fi
          elif [[ -d apps ]]
          then
            LIST_DIR=`ls -1d apps/*`
          else
            LIST_DIR=`ls -1d */ | sed -r 's/\/$//'`
          fi
          echo "Directories w changes: "$LIST_DIR
          echo "Diff tags: "$DIFF_TAGS
          for DIR in $LIST_DIR
          do
            if [[ -e $DIR/src && -e $DIR/Dockerfile ]]
            then
              DIR=`echo $DIR| sed -r 's/\/$//'`
              CHANGED_WLS_DIRS+=("$DIR")
            fi
          done
          echo "CHANGED_WLS_DIRS=${CHANGED_WLS_DIRS[@]}">> "$GITHUB_ENV"
          # kaniko parallel start
          #linter
          IFS=\| eval 'FILTER_REGEX_INCLUDE="${CHANGED_WLS_DIRS[*]}"'
          echo "FILTER_REGEX_INCLUDE=(${FILTER_REGEX_INCLUDE}|libs/)">> "$GITHUB_ENV"
          # using action: oxsecurity/megalinter/flavors/javascript@v7.10.0
          # template https://raw.githubusercontent.com/oxsecurity/megalinter/main/TEMPLATES/mega-linter.yml
      - name: megalinter
        uses: "oxsecurity/megalinter/flavors/javascript@v7.10.0"
        id: ml
        env:
           CHANGED_WLS_DIRS: ${{ env.CHANGED_WLS_DIRS }}
           FILTER_REGEX_INCLUDE: ${{ env.FILTER_REGEX_INCLUDE}}
           DISABLE_ERRORS: "true"

      - name: Upload MegaLinter artifacts
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
#trivy
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy artifacts
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: Trivy report
          path: |
            trivy-results.sarif
# parallel crane

